---
# Based on https://docs.ansible.com/ansible/latest/user_guide/playbooks_filters_ipaddr.html#playbooks-filters-ipaddr
- name: Using ipaddr filter and check on ip address variables
  hosts: localhost
  gather_facts: False
  vars:
    ipv4_adresses:
      - 192.168.0.1/24
      - 192.168.1.1/24
      - 192.168.1.1/27
      - 192.168.1.1/32
      - 192.168.4.8/24
      - 192.168.1.1/255.255.255.248
    ipv6_adresses:
      - FD00:00:00:01::1/64
      - FDG0:00:00:01::1
      - FE80:00::1/64
      - 2001:db8::1/64
      - 2001:DB8::1/64
  tasks:
    - name: get ipv4 network parameters
      debug:
        msg: "Entry: {{ item }}
              Wilcard: {{ item | ipaddr('hostmask') }}
              Host: {{ item | ipaddr('hostmask') }}
              Netmask: {{ item | ipaddr('netmask') }}
              Network: {{ item | ipaddr('network') }}
              Prefix: {{ item | ipaddr('prefix') }}"
      loop: "{{ ipv4_adresses }}"
    - name: get best supernet
      debug:
        msg: "{{ ipv4_adresses | cidr_merge('span') }}"
    - name: get supernets
      debug:
        msg: "{{ ipv4_adresses | cidr_merge }}"
      register: supernets
    - name: print supernets
      debug:
        msg: "Entry: {{ item }}"
      loop: "{{ supernets.msg }}"
    - name: ipv6 formed
      debug:
        msg: "Entry: {{ item }} formed: {{ item | ipaddr('host') }}"
      loop: "{{ ipv6_adresses | upper }}"
      when:
        - item | ipv6
        - item | upper
    - name: is ipv6 link-local ?
      debug:
        msg: "Entry: {{ item }} is a Link Local Address"
      loop: "{{ ipv6_adresses }}"
      when:
        - item is regex("^FE80:")
        - item | ipv6
        - item | upper
    - name: is ipv6 documentation address ?
      debug:
        msg: "Entry: {{ item }} is a Documentation Address"
      loop: "{{ ipv6_adresses | upper }}"
      when:
        - item is regex("^2001:DB8:")
        - item | ipv6
        - item | upper
    - name: is ipv6 ula address ?
      debug:
        msg: "Entry: {{ item }} is a Unique Local Address"
      loop: "{{ ipv6_adresses | upper }}"
      when:
        - item is regex("^FD[0-9A-F]?[0-9A-F]?:")
        - item | ipv6
        - item | upper
    - name: is ipv6 gua address ?
      debug:
        msg: "Entry: {{ item }} is a Global Unicast Address"
      loop: "{{ ipv6_adresses | upper }}"
      when:
        - item is regex("^[2-3][0-9A-F]?[0-9A-F]?[0-9A-F]?:")
        - item | ipv6
        - item | upper
    - name: is ipv6 gua address ?
      debug:
        msg: "Entry: {{ item }} is a Global Unicast Address"
      loop: "{{ ipv6_adresses | upper }}"
      when:
        - item | ipaddr('public')
        - item | upper
    - name: is ipv6 private address ?
      debug:
        msg: "Entry: {{ item }} is a private IPv6 Address"
      loop: "{{ ipv6_adresses | upper }}"
      when:
        - item | ipaddr('private')
        - item | upper
